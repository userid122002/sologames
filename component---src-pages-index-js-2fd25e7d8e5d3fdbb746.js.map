{"version":3,"sources":["webpack:///./src/components/game-index-grid.js","webpack:///./src/pages/index.js"],"names":["GameIndexGrid","data","rows","forEach","data_item","push","game","gamepage","to","gameid","bgglink","href","target","rel","id","style","height","width","columns","field","headerName","filterable","sortable","renderCell","params","value","hide","pageSize","rowsPerPageOptions","hideFooterSelectedRowCount","Index","title","allGameIndexCsv","nodes"],"mappings":"4LAIe,SAASA,EAAT,GAAkC,IAATC,EAAQ,EAARA,KAO9BC,EAAO,GAab,OAZAD,EAAKE,SAAQ,SAASC,GACdF,EAAKG,KACD,CACIC,KAAMF,EAAUE,KAChBC,SAAU,kBAAC,OAAD,CAAMC,GAAI,wBAA0BJ,EAAUK,QAA9C,aACVC,QAAS,uBAAGC,KAAMP,EAAUM,QAASE,OAAO,SAASC,IAAI,cAAhD,SACTC,GAAIV,EAAUK,YAO1B,6BACI,0CACA,yBAAKM,MAAO,CAAEC,OAAQ,IAAKC,MAAO,SAC9B,kBAAC,IAAD,CAAUf,KAAMA,EAAMgB,QAvBlB,CACZ,CAAEC,MAAO,OAAQC,WAAY,OAAQH,MAAO,KAC5C,CAAEE,MAAO,WAAYC,WAAY,UAAWH,MAAO,IAAKI,YAAY,EAAOC,UAAU,EAAOC,WAAY,SAACC,GAAD,OAAaA,EAAOC,QAC5H,CAAEN,MAAO,UAAWC,WAAY,MAAOH,MAAO,IAAKI,YAAY,EAAOC,UAAU,EAAOC,WAAY,SAACC,GAAD,OAAaA,EAAOC,QACvH,CAAEN,MAAO,KAAMC,WAAY,KAAMM,MAAM,IAmBSC,SAAU,GAAIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAMC,4BAA4B,KAE7H,8G,4BCxBG,SAASC,EAAT,GAA0B,IAAT7B,EAAQ,EAARA,KAC9B,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK8B,MAAM,SACX,kBAAC/B,EAAD,CAAeC,KAAMA,EAAK+B,gBAAgBC","file":"component---src-pages-index-js-2fd25e7d8e5d3fdbb746.js","sourcesContent":["import React from \"react\"\r\nimport { DataGrid } from \"@material-ui/data-grid\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default function GameIndexGrid({ data }) {\r\n    const columns = [\r\n        { field: 'game', headerName: 'Game', width: 780 },\r\n        { field: 'gamepage', headerName: 'Details', width: 120, filterable: false, sortable: false, renderCell: (params) => (params.value) },\r\n        { field: 'bgglink', headerName: 'BGG', width: 120, filterable: false, sortable: false, renderCell: (params) => (params.value) },\r\n        { field: 'id', headerName: 'ID', hide: true },\r\n    ]\r\n    const rows = []\r\n    data.forEach(function(data_item) {\r\n            rows.push(\r\n                {\r\n                    game: data_item.game,\r\n                    gamepage: <Link to={\"/gamedetails/?gameid=\" + data_item.gameid}>[details]</Link>,\r\n                    bgglink: <a href={data_item.bgglink} target=\"_blank\" rel=\"noreferrer\">[bgg]</a>,\r\n                    id: data_item.gameid,\r\n                }\r\n            )\r\n\r\n        }\r\n    )\r\n    return (\r\n        <div>\r\n            <h1>Game Index</h1>\r\n            <div style={{ height: 670, width: '100%' }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={10} rowsPerPageOptions={[10, 20, 50, 100]} hideFooterSelectedRowCount={true}/>\r\n            </div>\r\n            <small>The column header can be used to filter the results for a particular game.</small>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport GameIndexGrid from \"../components/game-index-grid\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\n\nexport default function Index( {data} ) {\n  return (\n    <Layout>\n        <SEO title=\"Home\"></SEO>\n        <GameIndexGrid data={data.allGameIndexCsv.nodes}></GameIndexGrid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n    query {\n      allGameIndexCsv (sort: {fields: game, order: ASC}) {\n        nodes {\n          bgglink\n          game\n          gameid\n        }\n      }\n    }\n`"],"sourceRoot":""}