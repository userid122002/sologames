{"version":3,"sources":["webpack:///./src/components/yearmonth-index-grid.js","webpack:///./src/pages/yearmonthindex.js"],"names":["YearMonthIndexGrid","data","rows","forEach","data_item","push","yearmonth","to","geeklistid","href","geeklistlink","target","rel","style","height","width","columns","field","headerName","filterable","sortable","renderCell","params","value","hide","pageSize","rowsPerPageOptions","hideFooterSelectedRowCount","Index","title","allYearmonthIndexCsv","nodes"],"mappings":"8LAIe,SAASA,EAAT,GAAuC,IAATC,EAAQ,EAARA,KAOnCC,EAAO,GAWb,OAVAD,EAAKE,SAAQ,SAASC,GAClBF,EAAKG,KACD,CACI,UAAaD,EAAUE,UACvB,cAAiB,kBAAC,OAAD,CAAMC,GAAI,iCAAmCH,EAAUI,YAAvD,aACjB,QAAW,uBAAGC,KAAML,EAAUM,aAAcC,OAAO,SAASC,IAAI,cAArD,SACX,GAAMR,EAAUI,gBAKxB,6BACI,gDACA,yBAAKK,MAAO,CAAEC,OAAQ,IAAKC,MAAO,SAC9B,kBAAC,IAAD,CAAUb,KAAMA,EAAMc,QArBlB,CACZ,CAAEC,MAAO,YAAaC,WAAY,aAAcH,MAAO,KACvD,CAAEE,MAAO,gBAAiBC,WAAY,UAAWH,MAAO,IAAKI,YAAY,EAAOC,UAAU,EAAOC,WAAY,SAACC,GAAD,OAAaA,EAAOC,QACjI,CAAEN,MAAO,UAAWC,WAAY,MAAOH,MAAO,IAAKI,YAAY,EAAOC,UAAU,EAAOC,WAAY,SAACC,GAAD,OAAaA,EAAOC,QACvH,CAAEN,MAAO,KAAMC,WAAY,KAAMM,MAAM,IAiBSC,SAAU,GAAIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAMC,4BAA4B,KAE7H,oH,4BCtBG,SAASC,EAAT,GAA0B,IAAT3B,EAAQ,EAARA,KAC5B,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK4B,MAAM,qBACX,kBAAC7B,EAAD,CAAoBC,KAAMA,EAAK6B,qBAAqBC","file":"component---src-pages-yearmonthindex-js-388c090738e8bd5ef7b4.js","sourcesContent":["import React from \"react\"\r\nimport { DataGrid } from \"@material-ui/data-grid\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default function YearMonthIndexGrid( {data} ) {\r\n    const columns = [\r\n        { field: 'yearmonth', headerName: \"Year/Month\", width: 200 },\r\n        { field: 'yearmonthpage', headerName: \"Details\", width: 120, filterable: false, sortable: false, renderCell: (params) => (params.value) },\r\n        { field: 'bgglink', headerName: \"BGG\", width: 120, filterable: false, sortable: false, renderCell: (params) => (params.value) },\r\n        { field: 'id', headerName: \"ID\", hide: true },\r\n    ]\r\n    const rows = []\r\n    data.forEach(function(data_item) {\r\n        rows.push(\r\n            {\r\n                'yearmonth': data_item.yearmonth,\r\n                'yearmonthpage': <Link to={\"/yearmonthdetails/?geeklistid=\" + data_item.geeklistid}>[details]</Link>,\r\n                'bgglink': <a href={data_item.geeklistlink} target=\"_blank\" rel=\"noreferrer\">[bgg]</a>,\r\n                'id': data_item.geeklistid,\r\n            }\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <h1>Year/Month Index</h1>\r\n            <div style={{ height: 670, width: '100%' }}>\r\n                <DataGrid rows={rows} columns={columns} pageSize={10} rowsPerPageOptions={[10, 20, 50, 100]} hideFooterSelectedRowCount={true}/>\r\n            </div>\r\n            <small>The column header can be used to filter the results for a particular year/month.</small>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport YearMonthIndexGrid from \"../components/yearmonth-index-grid\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default function Index( {data} ) {\r\n    return (\r\n      <Layout>\r\n          <SEO title=\"Year/Month Index\"></SEO>\r\n          <YearMonthIndexGrid data={data.allYearmonthIndexCsv.nodes}></YearMonthIndexGrid>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  export const query = graphql`\r\n    query {\r\n      allYearmonthIndexCsv (sort: {fields: geeklistid, order: DESC}) {\r\n        nodes {\r\n          geeklistid\r\n          yearmonth\r\n          geeklistlink\r\n        }\r\n      }\r\n    }\r\n`"],"sourceRoot":""}